on:
  push:
    branches:
      - main
    paths:
      - 'posts/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

name: build-blog

env:
  isExtPR: ${{ github.event.pull_request.head.repo.fork == true }}

jobs:
  build:
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}
      
      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v2
      
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          
      - name: Install rsconnect
        run: |
            Rscript -e "install.packages('rsconnect')"
            Rscript -e "packageVersion('rsconnect')"
      - name: Install r packages
        run: |
            Rscript -e 'install.packages(c("dplyr", "tidyr", "devtools","purrr", "glue","rtables", "haven", "flextable","assertive", "jsonlite", "yaml", "data.table", "stringr", "rmarkdown", "knitr", "kableExtra"))'
            Rscript -e 'devtools::install_github("brentscott93/pagecryptr")'
            Rscript -e "packageVersion('rtables')"

      - uses: quarto-dev/quarto-actions/install-quarto@v1

      - name: Build blog
        run: | 
          quarto render
          
      - name: Add permission management
        working-directory: ./_site
        run: |
            pagecryptr::pagecryptr("index.html", ${{ secrets.SINGLE_DOCS_PASSWD }}, out_file = "index.html")
            contents <- paste(readLines("index.html"), collapse = "\n")
            writeLines(gsub(${{ secrets.CONTENT_EXCLUDE }}, "", contents), "index.html")
            for (i in list.dirs('posts')[-1]) {
               posts <- list.files(i)
               for (j in posts) {
               file <- file.path(i, j)
               pagecryptr::pagecryptr(file, ${{ secrets.SINGLE_DOCS_PASSWD }}, out_file = file)
               contents <- paste(readLines(file), collapse = "\n")
               writeLines(gsub(${{ secrets.CONTENT_EXCLUDE }}, "", contents), file)
                                }
            }
        shell: Rscript {0}
          
      - name: Write manifest
        working-directory: ./_site
        run: |
            Rscript -e "rsconnect::writeManifest(appPrimaryDoc = 'index.html', contentCategory = 'site')"
            
      - name: commit
        run: |
            git config --global user.email 782903342@qq.com
            git config --global user.name zq2323
            git add _site
            git commit -m "update the _site" -a
            
      - name: Push changes
        run: |
            git push
      
